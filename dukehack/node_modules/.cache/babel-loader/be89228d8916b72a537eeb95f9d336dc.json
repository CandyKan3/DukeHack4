{"ast":null,"code":"import _classCallCheck from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import Form from\"react-bootstrap/Form\";import Button from\"react-bootstrap/Button\";import Col from\"react-bootstrap/Col\";import Card from\"react-bootstrap/Card\";import{Redirect}from\"react-router-dom\";var Driver=/*#__PURE__*/function(_React$Component){_inherits(Driver,_React$Component);function Driver(props){var _this;_classCallCheck(this,Driver);_this=_possibleConstructorReturn(this,_getPrototypeOf(Driver).call(this,props));_this.setRedirect=function(){_this.setState({redirect:true});};_this.renderRedirect=function(){if(_this.state.redirect){return React.createElement(Redirect,{to:\"/meetings\"});}};_this.state={name:\"\",password:\"\",address:\"\",city:\"\",state:\"\",zip:\"\",redirect:false};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.renderRedirect=_this.renderRedirect.bind(_assertThisInitialized(_this));return _this;}_createClass(Driver,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Card,{style:{width:\"80%\",margin:\"0 auto\",marginTop:'.8rem',float:\"none\"}},React.createElement(Card.Header,null,React.createElement(\"h1\",null,\"Register as a Driver\")),React.createElement(Card.Body,null,React.createElement(Form,{onSubmit:this.handleSubmit},React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridEmail\"},React.createElement(Form.Label,null,\"Email\"),React.createElement(Form.Control,{type:\"email\",placeholder:\"Email\",value:this.state.name,onChange:function onChange(e){return _this2.setState({name:e.target.value});}})),React.createElement(Form.Group,{as:Col,controlId:\"formGridPassword\"},React.createElement(Form.Label,null,\"Password\"),React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\",value:this.state.password,onChange:function onChange(e){return _this2.setState({password:e.target.value});}}))),React.createElement(Form.Group,{controlId:\"formGridAddress2\"},React.createElement(Form.Label,null,\"Address\"),React.createElement(Form.Control,{placeholder:\"Apartment, studio, or floor\",value:this.state.address,onChange:function onChange(e){return _this2.setState({address:e.target.value});}})),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridCity\"},React.createElement(Form.Label,null,\"City\"),React.createElement(Form.Control,{value:this.state.city,onChange:function onChange(e){return _this2.setState({city:e.target.value});},placeholder:\"City\"})),React.createElement(Form.Group,{as:Col,controlId:\"formGridState\"},React.createElement(Form.Label,null,\"State\"),React.createElement(Form.Control,{as:\"select\",value:this.state.state,onChange:function onChange(e){return _this2.setState({state:e.target.value});}},React.createElement(\"option\",null,\"Choose...\"),React.createElement(\"option\",null,\"North Carolina\"),React.createElement(\"option\",null,\"South Carolina\"),React.createElement(\"option\",null,\"Virginia\"))),React.createElement(Form.Group,{as:Col,controlId:\"formGridZip\"},React.createElement(Form.Label,null,\"Zip\"),React.createElement(Form.Control,{value:this.state.zip,onChange:function onChange(e){return _this2.setState({zip:e.target.value});},placeholder:\"Zip\"}))),React.createElement(Form.Group,{id:\"formGridCheckbox\"},React.createElement(Form.Check,{type:\"checkbox\",label:\"Check me out\"})),React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Submit\")))));}},{key:\"handleSubmit\",value:function handleSubmit(event){event.preventDefault();var data={username:this.state.name,password:this.state.password,address:this.state.address,city:this.state.zip,state:this.state.state,zip:this.state.zip};console.log(data);fetch(\"/api/drive\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(res){return console.log(res);}).then(this.setRedirect);}}]);return Driver;}(React.Component);export default Driver;","map":{"version":3,"sources":["/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/src/components/driver.jsx"],"names":["React","Form","Button","Col","Card","Redirect","Driver","props","setRedirect","setState","redirect","renderRedirect","state","name","password","address","city","zip","handleSubmit","bind","width","margin","marginTop","float","e","target","value","event","preventDefault","data","username","console","log","fetch","method","headers","body","JSON","stringify","then","res","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport { Redirect } from \"react-router-dom\";\nclass Driver extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n\n      redirect: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n  render() {\n    return (\n      <div>\n        <Card style={{ width: \"80%\", margin: \"0 auto\", marginTop: '.8rem', float: \"none\" }}>\n          <Card.Header><h1>Register as a Driver</h1></Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={this.state.name}\n                    onChange={e => this.setState({ name: e.target.value })}\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={e => this.setState({ password: e.target.value })}\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group controlId=\"formGridAddress2\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  placeholder=\"Apartment, studio, or floor\"\n                  value={this.state.address}\n                  onChange={e => this.setState({ address: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    value={this.state.city}\n                    onChange={e => this.setState({ city: e.target.value })}\n                    placeholder=\"City\"\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={this.state.state}\n                    onChange={e => this.setState({ state: e.target.value })}\n                  >\n                    <option>Choose...</option>\n                    <option>North Carolina</option>\n                    <option>South Carolina</option>\n                    <option>Virginia</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control\n                    value={this.state.zip}\n                    onChange={e => this.setState({ zip: e.target.value })}\n                    placeholder=\"Zip\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group id=\"formGridCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/meetings\" />;\n    }\n  };\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = {\n      username: this.state.name,\n      password: this.state.password,\n      address: this.state.address,\n      city: this.state.zip,\n      state: this.state.state,\n      zip: this.state.zip\n    };\n    console.log(data);\n    fetch(\"/api/drive\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => console.log(res))\n      .then(this.setRedirect);\n  }\n}\nexport default Driver;\n"]},"metadata":{},"sourceType":"module"}