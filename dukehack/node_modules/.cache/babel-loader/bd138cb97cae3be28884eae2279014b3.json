{"ast":null,"code":"import _classCallCheck from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';import Card from'react-bootstrap/Card';import{Redirect}from'react-router-dom';var Rider=/*#__PURE__*/function(_React$Component){_inherits(Rider,_React$Component);function Rider(props){var _this;_classCallCheck(this,Rider);_this=_possibleConstructorReturn(this,_getPrototypeOf(Rider).call(this,props));_this.setRedirect=function(){_this.setState({redirect:true});};_this.renderRedirect=function(){if(_this.state.redirect){return React.createElement(Redirect,{to:\"/meetings\"});}};_this.state={name:\"\",password:\"\",address:\"\",city:\"\",state:\"\",zip:\"\",redirect:false};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.renderRedirect=_this.renderRedirect.bind(_assertThisInitialized(_this));return _this;}_createClass(Rider,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(\"h1\",{className:\"text-center\"},\"Welcome!\"),React.createElement(\"h2\",{className:\"text-center\"},\"Please fill out the form below to request a ride!\"),React.createElement(Card,{style:{width:'80rem',margin:'0 auto',float:'none'}},React.createElement(Card.Body,null,React.createElement(Form,{onSubmit:this.handleSubmit},React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridEmail\"},React.createElement(Form.Label,null,\"Email\"),React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:this.state.name,onChange:function onChange(e){return _this2.setState({name:e.target.value});}})),React.createElement(Form.Group,{as:Col,controlId:\"formGridPassword\"},React.createElement(Form.Label,null,\"Password\"),React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\",value:this.state.password,onChange:function onChange(e){return _this2.setState({password:e.target.value});}}))),React.createElement(Form.Group,{controlId:\"formGridAddress2\"},React.createElement(Form.Label,null,\"Address\"),React.createElement(Form.Control,{placeholder:\"Apartment, studio, or floor\",value:this.state.address,onChange:function onChange(e){return _this2.setState({address:e.target.value});}})),React.createElement(Form.Row,null,React.createElement(Form.Group,{as:Col,controlId:\"formGridCity\"},React.createElement(Form.Label,null,\"City\"),React.createElement(Form.Control,{value:this.state.city,onChange:function onChange(e){return _this2.setState({city:e.target.value});}})),React.createElement(Form.Group,{as:Col,controlId:\"formGridState\"},React.createElement(Form.Label,null,\"State\"),React.createElement(Form.Control,{as:\"select\",value:this.state.state,onChange:function onChange(e){return _this2.setState({state:e.target.value});}},React.createElement(\"option\",null,\"Choose...\"),React.createElement(\"option\",null,\"North Carolina\"),React.createElement(\"option\",null,\"South Carolina\"),React.createElement(\"option\",null,\"Virginia\"))),React.createElement(Form.Group,{as:Col,controlId:\"formGridZip\"},React.createElement(Form.Label,null,\"Zip\"),React.createElement(Form.Control,{value:this.state.zip,onChange:function onChange(e){return _this2.setState({zip:e.target.value});}}))),React.createElement(Form.Group,{id:\"formGridCheckbox\"},React.createElement(Form.Check,{type:\"checkbox\",label:\"Check me out\"})),React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Submit\")))));}},{key:\"handleSubmit\",value:function handleSubmit(event){event.preventDefault();var data={\"username\":this.state.name,\"password\":this.state.password,\"address\":this.state.address,\"city\":this.state.zip,\"state\":this.state.state,\"zip\":this.state.zip};console.log(data);fetch('/api/ride',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(res){return console.log(res);}).then(this.setRedirect);}}]);return Rider;}(React.Component);export default Rider;","map":{"version":3,"sources":["/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/src/components/rider.jsx"],"names":["React","Form","Button","Col","Card","Redirect","Rider","props","setRedirect","setState","redirect","renderRedirect","state","name","password","address","city","zip","handleSubmit","bind","width","margin","float","e","target","value","event","preventDefault","data","console","log","fetch","method","headers","body","JSON","stringify","then","res","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Redirect } from 'react-router-dom';\nclass Rider extends React.Component {\n  constructor (props){\n  super(props);\n\n  this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      city:\"\",\n      state:\"\",\n      zip:\"\",\n\n      redirect: false\n    };\n\n\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.renderRedirect = this.renderRedirect.bind(this);\n\n}\n  render() {\n    return (\n      <div>\n      <h1 className=\"text-center\">\n      Welcome!\n      </h1>\n      <h2 className=\"text-center\">\n      Please fill out the form below to request a ride!\n      </h2>\n      <Card style = {{ width: '80rem', margin: '0 auto', float: 'none', }}>\n      <Card.Body>\n      <Form onSubmit={this.handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.name} onChange={ e => this.setState({ name : e.target.value }) }/>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={ e => this.setState({password: e.target.value }) }/>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group controlId=\"formGridAddress2\">\n        <Form.Label>Address</Form.Label>\n        <Form.Control placeholder=\"Apartment, studio, or floor\" value={this.state.address} onChange={ e => this.setState({ address : e.target.value }) }/>\n      </Form.Group>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridCity\">\n          <Form.Label>City</Form.Label>\n          <Form.Control value={this.state.city} onChange={ e => this.setState({ city: e.target.value }) } />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridState\">\n          <Form.Label>State</Form.Label>\n          <Form.Control as=\"select\" value={this.state.state} onChange={ e => this.setState({ state: e.target.value }) }>\n            <option>Choose...</option>\n            <option>North Carolina</option>\n            <option>South Carolina</option>\n              <option>Virginia</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridZip\">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control value={this.state.zip} onChange={ e => this.setState({ zip : e.target.value }) } />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group id=\"formGridCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n    </Card.Body>\n    </Card>\n\n      </div>\n    )\n  }\n  setRedirect = () => {\n  this.setState({\n    redirect: true\n  })\n  }\n  renderRedirect = () => {\n  if (this.state.redirect) {\n   return <Redirect to='/meetings' />\n  }\n  }\n  handleSubmit(event) {\n      event.preventDefault();\n      const data ={\"username\": this.state.name, \"password\": this.state.password, \"address\": this.state.address, \"city\": this.state.zip, \"state\": this.state.state\n    , \"zip\": this.state.zip}\n      console.log(data);\n      fetch('/api/ride', {\n        method: 'POST',\n        headers: {\n     'Content-Type':'application/json'\n   },\n        body: JSON.stringify(data)}\n      ).then(res => console.log(res)).then(this.setRedirect);\n\n    }\n}\nexport default Rider\n"]},"metadata":{},"sourceType":"module"}