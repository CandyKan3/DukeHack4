{"ast":null,"code":"var _jsxFileName = \"/Users/homefolder/Desktop/webapp/dukehack/src/components/route.jsx\";\nimport React, { Component } from \"react\";\nimport { throwStatement } from \"@babel/types\";\n\nclass RoutComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMap = () => {\n      window[\"initMap\"] = () => {\n        this.loadMap();\n      };\n\n      if (!window.document.getElementById(\"google-map-script\")) {\n        var s = window.document.createElement(\"script\");\n        s.id = \"google-map-script\";\n        s.type = \"text/javascript\";\n        s.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBCUiun3GfVhDIslkBV4Cf657dkStM-z80&callback=initMap\";\n        window.document.body.appendChild(s);\n      } else {\n        this.loadMap();\n      }\n    };\n\n    this.loadMap = () => {\n      var centerObj = new window[\"google\"].maps.LatLng(this.state.lat, this.state.lng);\n      var map = new window[\"google\"].maps.Map(this.refs.map, {\n        center: centerObj,\n        zoom: this.props.zoom\n      });\n      /*var marker = new window[\"google\"].maps.Marker({\n        position: { lat: 22.7196, lng: 75.8577 },\n        map: map,\n        title: \"Hello World!\",\n        draggable: true,\n        animation: window[\"google\"].maps.Animation.DROP\n      });*/\n\n      var dirService = new window[\"google\"].maps.DirectionsService();\n      var originObj = new window[\"google\"].maps.LatLng(this.props.origin.lat, this.props.origin.lng);\n      var destinationObj = new window[\"google\"].maps.LatLng(this.props.destination.lat, this.props.destination.lng);\n      var dirReq = {\n        origin: originObj,\n        destination: destinationObj,\n\n        /*waypoints: [\n          {\n            location: \"Joplin, MO\",\n            stopover: false\n          },\n          {\n            location: \"Oklahoma City, OK\",\n            stopover: true\n          }\n        ],*/\n        provideRouteAlternatives: true,\n        travelMode: \"DRIVING\",\n        drivingOptions: {\n          departureTime: new Date(),\n          trafficModel: \"pessimistic\"\n        },\n        unitSystem: window[\"google\"].maps.UnitSystem.IMPERIAL\n      };\n      dirService.route(dirReq, function (response, status) {\n        if (status === window[\"google\"].maps.DirectionsStatus.OK) {\n          new window[\"google\"].maps.DirectionsRenderer({\n            map: map,\n            directions: response\n          });\n          console.log(response);\n        }\n      });\n      var infowindow = new window[\"google\"].maps.InfoWindow({\n        content: \"\"\n      });\n      /*marker.addListener(\"click\", function() {\n        infowindow.open(map, marker);\n      });*/\n    };\n\n    this.state = {\n      data: [],\n      lat: 0,\n      lng: 0,\n      dates: \"\",\n      notes: \"\"\n    };\n    this.getData = this.getData.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  render() {\n    var isEmpty = this.props.origin === undefined;\n\n    if (isEmpty) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Loading...\"); // note you can also return null here to render nothing\n    }\n\n    console.log(this.state.data.lat);\n    return React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))));\n  }\n\n  getData() {\n    fetch(\"/api/getuser2\").then(res => res.json());\n  }\n\n  componentWillMount() {\n    var that = this;\n    var url = \"http://localhost:3000/api/data\";\n    fetch(\"/api/getuser2\").then(function (response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n\n      return response.json();\n    }).then(function (data) {\n      //that.setState({ data: data, lat: data.lat, lng: data.lng });\n      that.setState({\n        data: data,\n        lat: parseFloat(data.lat),\n        lng: parseFloat(data.lng)\n      }, () => {\n        console.log(that.state);\n      });\n    });\n  }\n\n}\n\nexport default RoutComponent;","map":{"version":3,"sources":["/Users/homefolder/Desktop/webapp/dukehack/src/components/route.jsx"],"names":["React","Component","throwStatement","RoutComponent","constructor","props","renderMap","window","loadMap","document","getElementById","s","createElement","id","type","src","body","appendChild","centerObj","maps","LatLng","state","lat","lng","map","Map","refs","center","zoom","dirService","DirectionsService","originObj","origin","destinationObj","destination","dirReq","provideRouteAlternatives","travelMode","drivingOptions","departureTime","Date","trafficModel","unitSystem","UnitSystem","IMPERIAL","route","response","status","DirectionsStatus","OK","DirectionsRenderer","directions","console","log","infowindow","InfoWindow","content","data","dates","notes","getData","bind","componentDidMount","render","isEmpty","undefined","width","height","fetch","then","res","json","componentWillMount","that","url","Error","setState","parseFloat"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { throwStatement } from \"@babel/types\";\n\nclass RoutComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      lat:0,\n      lng:0,\n      dates: \"\",\n      notes: \"\"\n    };\n    this.getData = this.getData.bind(this);\n  }\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  renderMap = () => {\n    window[\"initMap\"] = () => {\n      this.loadMap();\n    };\n    if (!window.document.getElementById(\"google-map-script\")) {\n      var s = window.document.createElement(\"script\");\n      s.id = \"google-map-script\";\n      s.type = \"text/javascript\";\n      s.src =\n        \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBCUiun3GfVhDIslkBV4Cf657dkStM-z80&callback=initMap\";\n\n      window.document.body.appendChild(s);\n    } else {\n      this.loadMap();\n    }\n  };\n\n  loadMap = () => {\n    var centerObj = new window[\"google\"].maps.LatLng(\n      this.state.lat,\n      this.state.lng\n    );\n\n    var map = new window[\"google\"].maps.Map(this.refs.map, {\n      center: centerObj,\n      zoom: this.props.zoom\n    });\n\n    /*var marker = new window[\"google\"].maps.Marker({\n      position: { lat: 22.7196, lng: 75.8577 },\n      map: map,\n      title: \"Hello World!\",\n      draggable: true,\n      animation: window[\"google\"].maps.Animation.DROP\n    });*/\n\n    var dirService = new window[\"google\"].maps.DirectionsService();\n    var originObj = new window[\"google\"].maps.LatLng(\n      this.props.origin.lat,\n      this.props.origin.lng\n    );\n    var destinationObj = new window[\"google\"].maps.LatLng(\n      this.props.destination.lat,\n      this.props.destination.lng\n    );\n\n    var dirReq = {\n      origin: originObj,\n      destination: destinationObj,\n      /*waypoints: [\n        {\n          location: \"Joplin, MO\",\n          stopover: false\n        },\n        {\n          location: \"Oklahoma City, OK\",\n          stopover: true\n        }\n      ],*/\n      provideRouteAlternatives: true,\n      travelMode: \"DRIVING\",\n      drivingOptions: {\n        departureTime: new Date(/* now, or future date */),\n        trafficModel: \"pessimistic\"\n      },\n      unitSystem: window[\"google\"].maps.UnitSystem.IMPERIAL\n    };\n\n    dirService.route(dirReq, function(response, status) {\n      if (status === window[\"google\"].maps.DirectionsStatus.OK) {\n        new window[\"google\"].maps.DirectionsRenderer({\n          map: map,\n          directions: response\n        });\n        console.log(response);\n      }\n    });\n\n    var infowindow = new window[\"google\"].maps.InfoWindow({\n      content: \"\"\n    });\n\n    /*marker.addListener(\"click\", function() {\n      infowindow.open(map, marker);\n    });*/\n  };\n\n  render() {\n var isEmpty = this.props.origin === undefined;\n if (isEmpty) {\n   return (\n     <p>Loading...</p>\n   ) // note you can also return null here to render nothing\n\n }\n\n\n      console.log(this.state.data.lat);\n    return (\n      <div className=\"row mt-5\">\n        <div className=\"col-md-10 mx-auto\">\n          <div className=\"card mt-3\">\n            <div className=\"card-body\">\n              <div ref=\"map\" style={{ width: \"100%\", height: \"400px\" }}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  getData() {\n    fetch(\"/api/getuser2\").then(res => res.json());\n  }\n  componentWillMount() {\n    var that = this;\n    var url = \"http://localhost:3000/api/data\";\n\n    fetch(\"/api/getuser2\")\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data) {\n        //that.setState({ data: data, lat: data.lat, lng: data.lng });\n      that.setState({data: data, lat: parseFloat(data.lat),lng: parseFloat(data.lng)}, ()=>{console.log(that.state)})\n      });\n  }\n}\n\nexport default RoutComponent;\n"]},"metadata":{},"sourceType":"module"}