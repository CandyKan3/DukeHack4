{"ast":null,"code":"var _jsxFileName = \"/Users/prithvirajchaudhuri/Desktop/Projects/Hackathons/HackDuke/Repo/DukeHack4/dukehack/src/components/route.jsx\";\nimport React, { Component } from \"react\";\nimport { throwStatement } from \"@babel/types\";\n\nclass RoutComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderMap = () => {\n      window[\"initMap\"] = () => {\n        this.loadMap();\n      };\n\n      if (!window.document.getElementById(\"google-map-script\")) {\n        var s = window.document.createElement(\"script\");\n        s.id = \"google-map-script\";\n        s.type = \"text/javascript\";\n        s.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBCUiun3GfVhDIslkBV4Cf657dkStM-z80&callback=initMap\";\n        window.document.body.appendChild(s);\n      } else {\n        this.loadMap();\n      }\n    };\n\n    this.loadMap = () => {\n      var map = new window[\"google\"].maps.Map(this.refs.map, {\n        center: {\n          lat: this.props.lat,\n          lng: this.props.lng\n        },\n        zoom: this.props.zoom\n      });\n      /*var marker = new window[\"google\"].maps.Marker({\n        position: { lat: 22.7196, lng: 75.8577 },\n        map: map,\n        title: \"Hello World!\",\n        draggable: true,\n        animation: window[\"google\"].maps.Animation.DROP\n      });*/\n\n      var dirService = new window[\"google\"].maps.DirectionsService();\n      var originObj = new window[\"google\"].maps.LatLng(41.850033, -87.6500523);\n      var destinationObj = new window[\"google\"].maps.LatLng(35.7838484, -78.67093919999999);\n      var dirReq = {\n        origin: originObj,\n        destination: destinationObj,\n\n        /*waypoints: [\n          {\n            location: \"Joplin, MO\",\n            stopover: false\n          },\n          {\n            location: \"Oklahoma City, OK\",\n            stopover: true\n          }\n        ],*/\n        provideRouteAlternatives: true,\n        travelMode: \"DRIVING\",\n        drivingOptions: {\n          departureTime: new Date(),\n          trafficModel: \"pessimistic\"\n        },\n        unitSystem: window[\"google\"].maps.UnitSystem.IMPERIAL\n      };\n      dirService.route(dirReq, function (response, status) {\n        if (status == window[\"google\"].maps.DirectionsStatus.OK) {\n          new window[\"google\"].maps.DirectionsRenderer({\n            map: map,\n            directions: response\n          });\n          console.log(response);\n        }\n      });\n      var infowindow = new window[\"google\"].maps.InfoWindow({\n        content: \"\"\n      });\n      /*marker.addListener(\"click\", function() {\n        infowindow.open(map, marker);\n      });*/\n    };\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default RoutComponent;","map":{"version":3,"sources":["/Users/prithvirajchaudhuri/Desktop/Projects/Hackathons/HackDuke/Repo/DukeHack4/dukehack/src/components/route.jsx"],"names":["React","Component","throwStatement","RoutComponent","renderMap","window","loadMap","document","getElementById","s","createElement","id","type","src","body","appendChild","map","maps","Map","refs","center","lat","props","lng","zoom","dirService","DirectionsService","originObj","LatLng","destinationObj","dirReq","origin","destination","provideRouteAlternatives","travelMode","drivingOptions","departureTime","Date","trafficModel","unitSystem","UnitSystem","IMPERIAL","route","response","status","DirectionsStatus","OK","DirectionsRenderer","directions","console","log","infowindow","InfoWindow","content","componentDidMount","render","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { throwStatement } from \"@babel/types\";\n\nclass RoutComponent extends Component {\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  renderMap = () => {\n    window[\"initMap\"] = () => {\n      this.loadMap();\n    };\n    if (!window.document.getElementById(\"google-map-script\")) {\n      var s = window.document.createElement(\"script\");\n      s.id = \"google-map-script\";\n      s.type = \"text/javascript\";\n      s.src =\n        \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBCUiun3GfVhDIslkBV4Cf657dkStM-z80&callback=initMap\";\n\n      window.document.body.appendChild(s);\n    } else {\n      this.loadMap();\n    }\n  };\n\n  loadMap = () => {\n    var map = new window[\"google\"].maps.Map(this.refs.map, {\n      center: { lat: this.props.lat, lng: this.props.lng },\n      zoom: this.props.zoom\n    });\n\n    /*var marker = new window[\"google\"].maps.Marker({\n      position: { lat: 22.7196, lng: 75.8577 },\n      map: map,\n      title: \"Hello World!\",\n      draggable: true,\n      animation: window[\"google\"].maps.Animation.DROP\n    });*/\n\n    var dirService = new window[\"google\"].maps.DirectionsService();\n    var originObj = new window[\"google\"].maps.LatLng(41.850033, -87.6500523);\n    var destinationObj = new window[\"google\"].maps.LatLng(\n      35.7838484,\n      -78.67093919999999\n    );\n    var dirReq = {\n      origin: originObj,\n      destination: destinationObj,\n      /*waypoints: [\n        {\n          location: \"Joplin, MO\",\n          stopover: false\n        },\n        {\n          location: \"Oklahoma City, OK\",\n          stopover: true\n        }\n      ],*/\n      provideRouteAlternatives: true,\n      travelMode: \"DRIVING\",\n      drivingOptions: {\n        departureTime: new Date(/* now, or future date */),\n        trafficModel: \"pessimistic\"\n      },\n      unitSystem: window[\"google\"].maps.UnitSystem.IMPERIAL\n    };\n\n    dirService.route(dirReq, function(response, status) {\n      if (status == window[\"google\"].maps.DirectionsStatus.OK) {\n        new window[\"google\"].maps.DirectionsRenderer({\n          map: map,\n          directions: response\n        });\n        console.log(response);\n      }\n    });\n\n    var infowindow = new window[\"google\"].maps.InfoWindow({\n      content: \"\"\n    });\n\n    /*marker.addListener(\"click\", function() {\n      infowindow.open(map, marker);\n    });*/\n  };\n  render() {\n    return (\n      <div className=\"row mt-5\">\n        <div className=\"col-md-10 mx-auto\">\n          <div className=\"card mt-3\">\n            <div className=\"card-body\">\n              <div ref=\"map\" style={{ width: \"100%\", height: \"400px\" }}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RoutComponent;\n"]},"metadata":{},"sourceType":"module"}