{"ast":null,"code":"var _jsxFileName = \"/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/src/components/rider.jsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Redirect } from 'react-router-dom';\n\nclass Rider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      redirect: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n\n  render() {\n    const redirectToReferrer = this.state.redirect;\n\n    if (redirectToReferrer === true) {\n      return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '80%',\n        margin: '0 auto',\n        marginTop: '.8rem',\n        float: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Register for a Ride\")), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      type: \"email\",\n      required: true,\n      placeholder: \"Enter email\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      required: true,\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"formGridAddress2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Form.Control, {\n      required: true,\n      placeholder: \"Apartment, studio, or floor\",\n      value: this.state.address,\n      onChange: e => this.setState({\n        address: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"City\"), React.createElement(Form.Control, {\n      required: true,\n      value: this.state.city,\n      placeholder: \"City\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"State\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.state,\n      onChange: e => this.setState({\n        state: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"North Carolina\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"South Carolina\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Virginia\"))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridZip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Zip\"), React.createElement(Form.Control, {\n      required: true,\n      value: this.state.zip,\n      placeholder: \"Zip\",\n      onChange: e => this.setState({\n        zip: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = {\n      username: this.state.name,\n      password: this.state.password,\n      address: this.state.address,\n      city: this.state.zip,\n      state: this.state.state,\n      zip: this.state.zip\n    };\n    console.log(data);\n    fetch(\"/api/ride\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => console.log(res)).then(this.setRedirect);\n  }\n\n}\n\nexport default Rider;","map":{"version":3,"sources":["/home/camoclone/Documents/Hack-Duke/DukeHack4/dukehack/src/components/rider.jsx"],"names":["React","Form","Button","Col","Card","Redirect","Rider","Component","constructor","props","setRedirect","setState","redirect","renderRedirect","state","name","password","address","city","zip","handleSubmit","bind","render","redirectToReferrer","width","margin","marginTop","float","e","target","value","event","preventDefault","data","username","console","log","fetch","method","headers","body","JSON","stringify","then","res"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Redirect } from 'react-router-dom';\nclass Rider extends React.Component {\n  constructor (props){\n  super(props);\n\n  this.state = {\n      name: \"\",\n      password: \"\",\n      address: \"\",\n      city:\"\",\n      state:\"\",\n      zip:\"\",\n\n      redirect: false\n    };\n\n\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.renderRedirect = this.renderRedirect.bind(this);\n\n}\n  render() {\n    const redirectToReferrer = this.state.redirect;\n         if (redirectToReferrer === true) {\n             return <Redirect to=\"/signin\"/>\n         }\n\n\n    return (\n      <div>\n      <Card style = {{ width: '80%', margin: '0 auto', marginTop: '.8rem', float: 'none', }}>\n      <Card.Header><h1>Register for a Ride</h1></Card.Header>\n      <Card.Body>\n      <Form onSubmit={this.handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" required placeholder=\"Enter email\" value={this.state.name} onChange={ e => this.setState({ name : e.target.value }) }/>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" required placeholder=\"Password\" value={this.state.password} onChange={ e => this.setState({password: e.target.value }) }/>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group controlId=\"formGridAddress2\">\n        <Form.Label>Address</Form.Label>\n        <Form.Control required placeholder=\"Apartment, studio, or floor\" value={this.state.address} onChange={ e => this.setState({ address : e.target.value }) }/>\n      </Form.Group>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridCity\">\n          <Form.Label>City</Form.Label>\n          <Form.Control required value={this.state.city} placeholder=\"City\" onChange={ e => this.setState({ city: e.target.value }) } />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridState\">\n          <Form.Label>State</Form.Label>\n          <Form.Control as=\"select\" value={this.state.state} onChange={ e => this.setState({ state: e.target.value }) }>\n            <option>North Carolina</option>\n            <option>South Carolina</option>\n              <option>Virginia</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridZip\">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control required value={this.state.zip} placeholder=\"Zip\" onChange={ e => this.setState({ zip : e.target.value }) } />\n        </Form.Group>\n      </Form.Row>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n    </Card.Body>\n    </Card>\n\n      </div>\n    )\n  }\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/signin\" />;\n    }\n  };\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = {\n      username: this.state.name,\n      password: this.state.password,\n      address: this.state.address,\n      city: this.state.zip,\n      state: this.state.state,\n      zip: this.state.zip\n    };\n    console.log(data);\n    fetch(\"/api/ride\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => console.log(res))\n      .then(this.setRedirect);\n  }\n}\nexport default Rider\n"]},"metadata":{},"sourceType":"module"}